def teoretical_C_i_j(autovalori,autovettori,i,j,gamma,k_b,T,s,t,omega,epsilon_0): 
    Cij=0
    #print("omega",omega)
    #print("gamma",gamma)
    #print("i",i)
    #print("j",j)
    #print("epsilon_0",epsilon_0)
    #print("zp",autovalori[1]/gamma)
    
    for p in range(1,len(autovalori)):
        z_p=autovalori[p]/gamma
        Cij+=autovettori[i,p]*(k_b*T/(z_p*gamma))*np.exp(-z_p*np.abs(t-s))*autovettori[p,j]
        for k in range(1,len(autovalori)):    
            z_k=autovalori[k]/gamma
            #print("z_k",z_k)    
            B_a_b_k=epsilon_0/gamma*(autovettori[20,k]-autovettori[75,k])
            B_a_b_p=epsilon_0/gamma*(autovettori[20,p]-autovettori[75,p])
            
            f_p_t_num=((math.pow(omega, 2)+math.pow(z_p, 2))*(1-np.exp(-z_p*t)))-math.pow(z_p, 2)*np.exp(-z_p*t)-math.pow(z_p, 2)*np.cos(omega*t)-omega*z_p*np.sin(omega*t)
            f_k_s_num=((math.pow(omega, 2)+math.pow(z_k, 2))*(1-np.exp(-z_k*s)))-math.pow(z_k, 2)*np.exp(-z_k*s)-math.pow(z_k, 2)*np.cos(omega*s)-omega*z_k*np.sin(omega*s)

            f_p_t_den=z_p*(math.pow(omega, 2)+math.pow(z_p, 2))
            #print("ciao",f_p_t_num)
            f_p_t=f_p_t_num/f_p_t_den
            f_k_s_den=z_k*(math.pow(omega, 2)+math.pow(z_k, 2))
            
            #print("ciao22222",f_k_s_num)
            f_k_s=f_k_s_num/f_k_s_den
            #print(autovettori[i,p]*B_a_b_p*B_a_b_k*f_p_t*f_k_s*autovettori[k,j]   )
            
            Cij=Cij+(autovettori[i,p]*B_a_b_p*B_a_b_k*f_p_t*f_k_s*autovettori[k,j])  
            #print(Cij)
            #print(Cij)
                 
    return Cij
@njit